{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/compound-interest-calc/CompoundInterestService.ts","./src/app/compound-interest-calc/IYear.ts","./src/app/compound-interest-calc/compound-interest-calc.component.ts","./src/app/compound-interest-calc/compound-interest-calc.component.html","./src/app/compound-interest-calc/interest-chart-component/interest-chart-component.component.ts","./src/app/compound-interest-calc/interest-chart-component/interest-chart-component.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'interest-calc';\n}\n","<div class=\"nav nav-fill bg-forest-green text-cultured py-2\">\n  <div style=\"width: 85%; margin: auto\">\n    <div class=\"navbar-brand ml-4\">\n      <a class=\"fa fa-calculator mr-2\" style=\"font-size: 1.75rem\"></a>\n      <h3 class=\"d-inline\">Compound Interest Calculator</h3>\n    </div>\n  </div>\n</div>\n<div class=\"container\">\n  <app-compound-interest-calc></app-compound-interest-calc>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CompoundInterestCalcComponent } from './compound-interest-calc/compound-interest-calc.component';\nimport {FormsModule} from '@angular/forms';\nimport { InterestChartComponentComponent } from './compound-interest-calc/interest-chart-component/interest-chart-component.component';\nimport {NgApexchartsModule} from 'ng-apexcharts';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompoundInterestCalcComponent,\n    InterestChartComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgApexchartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {IYear} from './IYear';\nimport {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompoundInterestService{\n  private years: IYear[] = null;\n\n\n  public getYearsOfGrowth(): IYear[]{\n    if (this.years) {\n      return this.years;\n    } else {\n      return [];\n    }\n  }\n  public setYearsOfGrowth(numberOfYears: number, initialAmount: number, monthlyAddition: number, interestRate: number): void {\n    const years: IYear[] = [];\n    for (let i = 0; i < numberOfYears; i++){\n      const yearId: number = i + 1;\n      let value: number;\n      let increase: number;\n      if (i > 0){\n        value = years[i - 1].value + (years[i - 1].value * (interestRate / 100)) + (monthlyAddition * 12);\n        increase = value - years[i - 1].value;\n      } else {\n        value = initialAmount;\n        increase = 0;\n      }\n      const growth: number = interestRate;\n      const year: Year = new Year(yearId, value, growth, increase);\n      years.push(year);\n    }\n    this.years = years;\n  }\n}\n\nclass Year extends IYear {\n\n  constructor(id: number, value: number, growth: number, increase: number) {\n    super();\n    this.yearId = id;\n    this.value = value;\n    this.growth = growth;\n    this.increase = increase;\n  }\n}\n","export class IYear {\n  yearId: number;\n  value: number;\n  growth: number;\n  increase: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {IYear} from './IYear';\nimport {CompoundInterestService} from './CompoundInterestService';\n\n@Component({\n  selector: 'app-compound-interest-calc',\n  templateUrl: './compound-interest-calc.component.html',\n  styleUrls: ['./compound-interest-calc.component.css']\n})\nexport class CompoundInterestCalcComponent implements OnInit {\n  yearsOfInterest: IYear[] = [];\n  initialAmount: number;\n  monthlyAddition: number;\n  interestRate: number;\n  numberOfYears: number;\n  constructor(private compoundInterestFactory: CompoundInterestService) { }\n\n  ngOnInit(): void {\n  }\n\n  getYearsOfInterest(): void {\n    this.compoundInterestFactory.setYearsOfGrowth(+this.numberOfYears, +this.initialAmount, +this.monthlyAddition, +this.interestRate);\n    console.log(this.compoundInterestFactory.getYearsOfGrowth());\n    this.yearsOfInterest = this.compoundInterestFactory.getYearsOfGrowth();\n  }\n}\n","<form class=\"mt-5 border rounded px-5 bg-cultured\">\n  <div class=\"form-row text-black-coral font-weight-bolder my-2\">\n    <div class=\"col\">\n      <label for=\"initial-amount-form\">Initial Amount:</label>\n      <input id=\"initial-amount-form\" type=\"text\" class=\"form-control\" placeholder=\"$ at start\"\n             [(ngModel)]=\"initialAmount\" name=\"initial-amount\" required>\n    </div>\n    <div class=\"col\">\n      <label for=\"monthly-investment-form\">Monthly Investment:</label>\n      <input id=\"monthly-investment-form\" type=\"text\" class=\"form-control\" placeholder=\"$ per month\"\n             [(ngModel)]=\"monthlyAddition\" name=\"monthly-addition\" required>\n    </div>\n    <div class=\"col\">\n      <label for=\"interest-rate-form\">Interest Rate:</label>\n      <input id=\"interest-rate-form\" type=\"text\" class=\"form-control\" placeholder=\"Example: 10 for 10%\"\n             [(ngModel)]=\"interestRate\" name=\"interest-rate\" required>\n    </div>\n    <div class=\"col\">\n      <label for=\"years-form\">Years:</label>\n      <input id=\"years-form\" type=\"text\" class=\"form-control\" placeholder=\"Number of years\"\n             [(ngModel)]=\"numberOfYears\" name=\"number-of-years\" required>\n    </div>\n  </div>\n  <button class=\"btn bg-black-coral text-cultured my-2\" style=\"opacity: .8\"\n    (click)=\"getYearsOfInterest()\">Calculate</button>\n</form>\n\n<app-interest-chart-component [yearsOfGrowth]=\"yearsOfInterest\"></app-interest-chart-component>\n\n<div class=\"row border-bottom mt-5 text-black-coral font-weight-bolder text-right\">\n  <div class=\"col\">Year(s)</div>\n  <div class=\"col\">Value</div>\n  <div class=\"col\">Growth</div>\n  <div class=\"col\">Increase</div>\n  <div class=\"col\"></div>\n</div>\n\n<div class=\"row my-3 text-black-coral border-bottom text-right\" *ngFor=\"let yearOfInterest of yearsOfInterest\">\n  <div class=\"col \">{{yearOfInterest.yearId}}</div>\n  <div class=\"col \">{{yearOfInterest.value | currency: 'USD': 'symbol':'1.2-2'}}</div>\n  <div class=\"col \">{{yearOfInterest.growth/100 | percent}}</div>\n  <div class=\"col text-forest-green\">{{yearOfInterest.increase | currency: 'USD': 'symbol':'1.2-2'}}</div>\n  <div class=\"col\"></div>\n</div>\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexTitleSubtitle,\n  ApexStroke,\n  ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport {IYear} from '../IYear';\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  yAxis: ApexYAxis;\n  xAxis: ApexXAxis;\n  dataLabels: ApexDataLabels;\n  grid: ApexGrid;\n  stroke: ApexStroke;\n  title: ApexTitleSubtitle;\n};\n\n@Component({\n  selector: 'app-interest-chart-component',\n  templateUrl: './interest-chart-component.component.html',\n  styleUrls: ['./interest-chart-component.component.css']\n})\nexport class InterestChartComponentComponent implements OnInit, OnChanges {\n\n  constructor() {}\n\n  @ViewChild('chart') chart: ChartComponent;\n  public chartOptions: Partial<ChartOptions>;\n  @Input() yearsOfGrowth: IYear[];\n  hasData = false;\n  showGraph = true;\n  filterYears = (x) => (this.yearsOfGrowth.length <= 30 ? true : x % Math.ceil(this.yearsOfGrowth.length / 30) === 0);\n  ngOnChanges(): void {\n    this.hasData = this.yearsOfGrowth.length > 0;\n    this.chartOptions = {\n      series: [\n        {\n          name: 'Dollars',\n          data: this.yearsOfGrowth.filter(y => this.filterYears(y.yearId)).map(y => +y.value.toFixed(0))\n        }\n      ],\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      title: {\n        text: `Graph of compound Interest over ${this.yearsOfGrowth.length} years`,\n        align: 'left'\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      yAxis: {\n        labels : {\n          formatter(val: number): string {\n            return val.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n          }\n        }\n      },\n      xAxis: {\n        title: {\n          text: 'Year(s)'\n        },\n        categories: this.yearsOfGrowth.filter(y => this.filterYears(y.yearId)).map(y => new Date().getFullYear().valueOf() + y.yearId),\n      }\n    };\n    console.log(this.chartOptions);\n  }\n\n  ngOnInit(): void {\n  }\n  toggleShowGraph(): void {\n    this.showGraph = !this.showGraph;\n  }\n}\n","<div *ngIf=\"hasData\">\n  <div class=\"mt-3\">\n\n    <div class=\"d-inline btn-outline-secondary border rounded p-1\"\n         (click)=\"toggleShowGraph()\">\n      <a class=\"fa fa-chevron-up up-chevron\" style=\"margin: auto\"\n         [class.down-chevron]=\"!showGraph\"></a></div>\n\n    <a class=\"ml-2\">{{chartOptions.title.text}}</a>\n    <div [class.d-none]=\"!showGraph\">\n      <apx-chart\n                 [series]=\"chartOptions.series\"\n                 [chart]=\"chartOptions\"\n                 [yaxis]=\"chartOptions.yAxis\"\n                 [xaxis]=\"chartOptions.xAxis\"></apx-chart>\n    </div>\n  </div>\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}